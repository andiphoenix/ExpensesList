{"ast":null,"code":"var _jsxFileName = \"/Users/andiphoenix/Documents/Lernen/React/M.Schwarzmu\\u0308ller/01-starting-setup/src/components/Chart/Chart.js\";\nimport React from \"react\";\nimport ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = props => {\n  const dataPointValues = props.dataPoints.map(datapoint => datapoint.value);\n  const totalMaximun = Math.max(...dataPointValues);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    children: props.dataPoints.map(i => /*#__PURE__*/_jsxDEV(ChartBar, {\n      value: i.value,\n      maxValue: totalMaximun,\n      label: i.label\n    }, i.label, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/andiphoenix/Documents/Lernen/React/M.SchwarzmuÌˆller/01-starting-setup/src/components/Chart/Chart.js"],"names":["React","ChartBar","Chart","props","dataPointValues","dataPoints","map","datapoint","value","totalMaximun","Math","max","i","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,aAAP;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,QAAMC,eAAe,GAAGD,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBC,SAAS,IAAIA,SAAS,CAACC,KAA5C,CAAxB;AACJ,QAAMC,YAAY,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAGP,eAAZ,CAArB;AAGE,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cACGD,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAsBM,CAAD,iBACpB,QAAC,QAAD;AACE,MAAA,KAAK,EAAEA,CAAC,CAACJ,KADX;AAEE,MAAA,QAAQ,EAAEC,YAFZ;AAGE,MAAA,KAAK,EAAEG,CAAC,CAACC;AAHX,OAIOD,CAAC,CAACC,KAJT;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAlBD;;KAAMX,K;AAoBN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\nimport ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\n\nconst Chart = (props) => {\n    const dataPointValues = props.dataPoints.map(datapoint => datapoint.value)\nconst totalMaximun = Math.max(...dataPointValues);\n\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((i) => (\n        <ChartBar\n          value={i.value}\n          maxValue={totalMaximun}\n          label={i.label}\n          key={i.label}\n        />\n      ))}\n      \n    </div>\n  );\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}